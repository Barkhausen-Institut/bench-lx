#!/bin/bash

QEMU_FLAGS="-serial stdio -smp $LX_CORES -m 256M"

if [ $LX_ARCH = "x86_64" ]; then
    QEMU_FLAGS+=" -kernel $LX_BUILDDIR/linux/arch/x86/boot/bzImage"
    QEMU_FLAGS+=" -initrd $LX_BUILDDIR/buildroot/images/rootfs.cpio.bz2"
elif [ $LX_ARCH = "riscv64" ]; then
    QEMU_FLAGS+=" -M virt"
    QEMU_FLAGS+=" -bios none"
    QEMU_FLAGS+=" -kernel $LX_BUILDDIR/riscv-pk/qemu/bbl"
    QEMU_FLAGS+=" -initrd $LX_BUILDDIR/buildroot/images/rootfs.cpio.bz2"
else
    echo "Not supported"
    exit 1
fi

kargs="console=ttyS0 root=/dev/initrd"

case $1 in
    warmup)
        ;;

    run)
        build/qemu/qemu-system-$LX_ARCH $QEMU_FLAGS -append "$kargs" $LX_FLAGS
        ;;

    dbg)
        build/ignoreint build/qemu/qemu-system-$LX_ARCH $QEMU_FLAGS -append "$kargs" $LX_FLAGS -S -s &
        pid=$!

        cmd=`mktemp`
        echo "target remote localhost:1234" > $cmd
        echo 'display/i $pc' >> $cmd
        ${CROSS_COMPILE}gdb --tui $LX_BUILDDIR/linux/vmlinux -command=$cmd
        rm $cmd
        kill $pid
        ;;

    bench|fsbench)
        echo "Not supported"
        ;;
esac
