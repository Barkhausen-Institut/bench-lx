#!/bin/bash

export XTENSA_CORE=DE_233L

simflags=""
# ensure that a cache miss costs 30 cycles, as a global memory read of 32bytes on T3
if [ "$LX_THCMP" = 1 ]; then
    simflags=" --write_delay=17 --read_delay=17"
    echo "Configuring core to require 30 cycles per cache-miss." 1>&2
else
    echo "Configuring core to require 13 cycles per cache-miss." 1>&2
fi
simflags="$simflags --dcsize=$((64*1024)) --dcline=32 --icsize=$((64*1024)) --icline=32 $LX_FLAGS"

extract_results() {
    awk '/>===.*/ {
        capture = 1
    }
    /<===.*/ {
        capture = 0
    }
    /^[^<>].*/ {
        if(capture == 1)
            print $0
    }'
}

case $1 in
    warmup)
        ;;

    run)
        cd $LX_BUILDDIR && xt-run --memlimit=128 --mem_model $simflags \
            arch/xtensa/boot/Image.elf
        ;;

    dbg)
        cmds=`mktemp`
        echo "target sim --mem_model $simflags --memlimit=128" > $cmds
        echo "symbol-file vmlinux" >> $cmds
        echo "display/i \$pc" >> $cmds

        cd $LX_BUILDDIR && xt-gdb --tui arch/xtensa/boot/Image.elf --command=$cmds
        rm $cmds
        ;;

    trace)
        args="--mem_model $simflags"
        cd $LX_BUILDDIR && xt-run $args --memlimit=128 \
            --client_commands="trace --level 0 trace.txt" \
            arch/xtensa/boot/Image.elf
        ;;

    bench|fsbench)
        tmp=`mktemp`
        if [ "$1" = "bench" ]; then
            echo RUN_BENCH > $tmp
        else
            echo -e -n "CMD=$FSBENCH_CMD\0" > $tmp
        fi

        # we can't run xt-run in background for some reason, which is why we run the loop that
        # waits for the benchmark to finish in background.
        res=`mktemp`
        (
            while [ "`grep '<===Benchmarks_done===' $res 2>/dev/null`" = "" ]; do
                # if the simulator exited for some reason and thus deleted the file, stop here
                if [ ! -f $res ]; then
                    exit 1
                fi
                sleep 1
            done

            # kill the process that uses the temp-file. should be just the iss started here
            # not killing all 'iss' instances allows us to run multiple benchmarks in parallel
            kill `lsof $res | grep '^iss' -m 1 | awk -e '{ print $2 }'`
        ) &

        (
            cd $LX_BUILDDIR && xt-run --memlimit=128 --mem_model $simflags \
            --loadbin=$tmp@0x3000000 arch/xtensa/boot/Image.elf > $res
        )

        extract_results < $res
        rm $res $tmp
        ;;
esac
